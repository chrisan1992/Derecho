@*@model IEnumerable<ActivosDerecho.Models.Activo>*@

@model PagedList.IPagedList<ActivosDerecho.Models.Activo>

@{
    ViewBag.Title = "Index";
}

<section style="width:100%;">
    <h2 style="color:steelblue;">Activos almacenados</h2>
    <div class="col-lg-12">
        @using (Html.BeginForm())
        {<!--Solo se dispara con los submit de los input o button o los enter del usuario-->
            <div class="input-group" style="float:left;">
                <input type="text" name="filtro" class="form-control" style="border-color: #66afe9; border-radius: 3px;width:100%;" placeholder="Busqueda...">
            </div>

        }
        <!--Los formularios estan separados para que no se mezclen las acciones del filtro
            con la exportacion del archivo de excel-->
        @using (Html.BeginForm())
        {
            <div class="btn-group" style="float:right;">
                <button type="submit" name="btn" value="Exportar" class="btn btn-success" style="margin-bottom:20px;">Exportar Excel</button>
                @Html.ActionLink("Agregar Nuevo", "Agregar", new { }, new { @class = "btn btn-info", style = "margin-bottom:20px;" })
            </div>
        }
    </div>
    <br />
    <section style="width:100%;">
        <section class="table-responsive">
            <table class="table table-striped" style="width:100%;">
                <thead>
                    <!--Los titulos de las columnas de la tabla-->
                    <tr>
                        <th>Placa</th>
                        <th>Nombre</th>
                        <th>Espacio Físico</th>
                        <th>Encargado</th>
                        <th>Estado</th>
                        <th>Inventario Por</th>
                        <th>Conciliación</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <!--Los datos de las columnas de la tabla-->
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(x => item.placa)</td>
                            <td>@Html.DisplayFor(x => item.nombreDescripcion)</td>
                            <td>@Html.DisplayFor(x => item.espacioFisico)</td>
                            <td>@Html.DisplayFor(x => item.encargado)</td>
                            <!--Esto para saber que poner de acuerdo a un numero-->
                            @{
                                String estado = (item.estado == 0) ? "Bueno" : "Malo";
                            }
                            <td>@Html.DisplayFor(x => @estado)</td>
                            <td>@Html.DisplayFor(x => item.inventarioPor)</td>
                            <td>@Html.DisplayFor(x => item.conciliacion)</td>
                            <!--Los botones para editar y eliminar que redirigen a acciones-->
                            <td class="ocultar">@Html.ActionLink("Editar", "Editar", new { id = @item.id }, new { @class = "btn btn-primary" })</td>
                            <td class="ocultar">@Html.ActionLink("Eliminar", "Eliminar", new { id = @item.id, placa = item.placa }, new { @class = "btn btn-danger" })</td>
                        </tr>
                    }
                </tbody>
            </table>
            <!--Para la paginacion de la tabla-->
            <div>
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                of @Model.PageCount
                @if (Model.HasPreviousPage)
                {
                    @Html.ActionLink("<<", "Index", new { pagina = 1 })
                    @Html.Raw(" ")
                    @Html.ActionLink("< Prev", "Index", new { pagina = Model.PageNumber - 1 })
                }
                else
                {
                    @:<<
                    @Html.Raw(" ")
                    @:< Prev
                }
                @if (Model.HasNextPage)
                {
                    @Html.ActionLink("Next >", "Index", new { pagina = Model.PageNumber + 1 })
                    @Html.Raw(" ")
                    @Html.ActionLink(">>", "Index", new { pagina = Model.PageCount })
                }
                else
                {
                    @:Next >
                    @Html.Raw(" ")
                    @:>>
                }

            </div>
        </section>
    </section>
</section>
<!--Si no es un administrador entonces no puede realizar modificaciones
    ni eliminaciones-->
@{
    Boolean activo = System.Web.HttpContext.Current.User.Identity.IsAuthenticated;
    if (activo)
    {
        MembershipUser actual = Membership.GetUser();
        if (!actual.UserName.Equals("Administrador"))
        {
            <script type="text/javascript">
                $(".ocultar").hide();
            </script>
        }
    }
    else
    {
        <script type="text/javascript">
            $(".ocultar").hide();
        </script>
    }
}

